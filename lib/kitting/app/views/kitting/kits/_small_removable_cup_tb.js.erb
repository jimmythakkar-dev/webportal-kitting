$(document).ready(function() {
    var gridster;
    gridster = $(".gridster > ul").gridster({
        widget_margins: [5, 5],
        widget_base_dimensions: [150, 100],
        min_cols: 3,
        max_cols: 3,
        min_rows: 6,
        max_rows: 6,
        avoid_overlapped_widgets: true,
        resize: {
            enabled: true,
            max_size: [2, 2],
            start: function(e, ui, $widget) {
            },
            resize: function(e, ui, $widget) {
            },
            stop: function(e, ui, $widget) {
                if($widget.attr("data-sizex") == 2) {
                    gridster.resize_widget($widget, 2, 2);
                }
                if($widget.attr("data-row") == 6) {
                    gridster.resize_widget($widget, 1, 1);
                }
                /********  Last row Blocks  **************/
                jQuery(".gridster > ul > li").each(function(i){
                    var row_cnt = parseInt(jQuery(this).attr("data-row"));
                    if(row_cnt == 6){
//                        jQuery(this).addClass('last_row');
                        if(parseInt(jQuery(this).attr("data-sizey")) == 2){
                            gridster.resize_widget(jQuery(this), 1, 1);
                        }
                    }
                    else if(row_cnt < 6){
                        jQuery(this).removeClass('last_row');
                    }
                });
                /********  Last row Blocks End **************/
                $("#save_layout").trigger( "click" );
            }
        },

        draggable: {
            start: function(e, ui, $widget) {
            },
            drag: function(e, ui, $widget) {
            },
            stop: function(e, ui, $widget) {
                /********  Last row Blocks  **************/
                jQuery(".gridster > ul > li").each(function(i){
                    var row_cnt = parseInt(jQuery(this).attr("data-row"));
                    if(row_cnt == 6){
//                            jQuery(this).addClass('last_row');
                        if(parseInt(jQuery(this).attr("data-sizey")) == 2){
                            gridster.resize_widget(jQuery(this), 1, 1);
                        }
                    }
                    else if(row_cnt < 6){
                        jQuery(this).removeClass('last_row');
                    }
                });
                /********  Last row Blocks End **************/
                $("#save_layout").trigger( "click" );
            }
        }
    }).data('gridster');

    $('.js-seralize').on('click', function() {
        var s = gridster.serialize();
        $('#log').val(JSON.stringify(s));
    })

    function resetboxno() {
        var count = 1;
        $(".gs-w").each(function(){
            $(this).find(".box-no").text(count);
            count++;
        });
    }

//    $(document).on('click', 'span.remove', function(){
//        gridster.remove_widget($(this).parent("li"), true);
//        setTimeout(function() {
//            resetboxno();
//        }, 500);
//    });

// Method to Add Cup to Configurable KMT
    $("span.add").on('click', function(){
      var kit_number = $("#mmt_kit_number").val() == '' ? $("#kit_number").val() : $("#mmt_kit_number").val();
        var group_id = $(this).attr("data-group");
        $.ajax({
            url: '/kitting/kits/add_widget_kit_layout',
            data: {"kit_number" : kit_number},
            type: "PUT",
            dataType: 'json',
            onLoading: start_configuring(),
            success: function(data){
                stop_configuring();
                if(data.cup_id != 0){
                    create_cup_id = data.cup_id;
                    var widgets = [
                        ['<li id='+create_cup_id+' data-group='+group_id+'><span class="box-no">New</span> <span class="remove">Remove</span></li>', 1, 1]
                    ];
                    $.each(widgets, function(i, widget){
                        gridster.add_widget.apply(gridster, widget);
                    });
                    setTimeout(function() {
                        resetboxno();
                    }, 500);
                    $("#save_layout").trigger( "click" );
                }
                else {
                    alert( "Unable to Create Cup, Contact KLX Administrator");
                }
            },
            error: function(data) {
                stop_configuring();
                alert( "Unable to add");
            }
        });
    });

// Method to remove Cup from Configurable KMT
    $(".remove_cup").click(function(){
        var result = confirm("Are you sure ?");
        if (result == true){
            cup_to_disable = $(this).parent().attr("id");
            var disabled_cups = new Array();
            disabled_cups.push(cup_to_disable);
            if (cup_to_disable != "") {
                $.ajax ({
                    url: '/kitting/cups/disable_cup',
                    type: 'GET',
                    data: "cup_id="+disabled_cups,
                    onLoading: start_configuring(),
                    success: function(data) {
                        stop_configuring();
                    }
                });
                gridster.remove_widget($(this).parent("li"), true);
                setTimeout(function() {
                    resetboxno();
                }, 500);
            }
        }
    });

// Method Call when A Lay out Is Saved in KMT
    $("#save_layout").click(function(){
        var kit_number = $("#mmt_kit_number").val() == '' ? $("#kit_number").val() : $("#mmt_kit_number").val();
        var serialize_data = $("#log").val();
        var update_cup_id = new Array();
        var disabled_cups = new Array();      // Stores Disabled Part Information.
        var disabled_cups_id = new Array();   // Stores Disabled Cup Ids.
        $.each(eval(serialize_data),function(index,value){
            if(value.row > 6 ) {
                if($("li[id="+value.id+"] div.block_area").children().length > 0 ){
                    $("li[id="+value.id+"] div.block_area span.part_block").map(function() {
                        disabled_cups.push( $(this).text() );
                    });
                    disabled_cups_id.push(value.id);
                }
                else{
                    disabled_cups_id.push(value.id);
                }
            }
            else{
                update_cup_id.push(value.id);
            }
        });

        if(disabled_cups_id.length > 0){
            if (disabled_cups.length > 0)
            {
                var result = confirm("Part Number with quantity " +disabled_cups+" will be destroyed, are you sure to continue ?");
                if (result == true){
                    $.ajax ({
                        url: '/kitting/cups/disable_cup',
                        type: 'GET',
                        data: "cup_id="+disabled_cups_id,
                        onLoading: start_configuring(),
                        success: function(data) {
                            stop_configuring();
                            $.ajax({
                                url: '/kitting/kits/update_kit_layout',
                                data: {"kit_number" : kit_number, "serialize_data": serialize_data},
                                type: "PUT",
                                onLoading: start_configuring(),
                                success: function(data){
                                    stop_configuring();
//                        window.location.reload();
                                },
                                error: function(data) {
                                    stop_configuring();
                                    alert( "Unable to update after delete cup with part");
                                }
                            });
                        },
                        error: function(data) {
                            stop_configuring();
                            alert( "Unable to delete cup with part");
                        }
                    });
                }
                else
                {
                    start_configuring();
                    window.location.reload();
                }
            }
            else{
                $.ajax ({
                    url: '/kitting/cups/disable_cup',
                    type: 'GET',
                    data: "cup_id="+disabled_cups_id,
                    onLoading: start_configuring(),
                    success: function(data) {
                        stop_configuring();
                        $.ajax({
                            url: '/kitting/kits/update_kit_layout',
                            data: {"kit_number" : kit_number, "serialize_data": serialize_data},
                            type: "PUT",
                            onLoading: start_configuring(),
                            success: function(data){
                                stop_configuring();
//                        window.location.reload();
                            },
                            error: function(data) {
                                stop_configuring();
                                alert( "Unable to update after delete cup");
                            }
                        });
                    },
                    error: function(data) {
                        stop_configuring();
                        alert( "Unable to delete cup");
                    }
                });
            }
        }
        else
        {
            $.ajax({
                url: '/kitting/kits/update_kit_layout',
                data: {"kit_number" : kit_number, "serialize_data": serialize_data},
                type: "PUT",
                onLoading: start_configuring(),
                success: function(data){
                    stop_configuring();
//                    window.location.reload();
                },
                error: function(data) {
                    stop_configuring();
                    alert( "Unable to update");
                }
            });
        }
    });

});
